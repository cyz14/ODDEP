doctype html
head 
  title Visual Editor
  block addstylesheets
    //- toolbar button ui 
    link(rel="stylesheet", href="/lib/aristo/jquery-ui-1.8.16.custom.css")
    //- jquery layout library
    link(rel="stylesheet", href="/lib/jquery.layout.css")
    link(rel="stylesheet", href="/stylesheets/visual-editor.css")

body#container
  div#navigation
    div.palette_node_element.draw2d_droppable(data-shape="draw2d.shape.node.Start") Start
    div.palette_node_element.draw2d_droppable(data-shape="draw2d.shape.node.End") End
    div.palette_node_element.draw2d_droppable(data-shape="draw2d.shape.node.Between") Between
  div#content
    div#toolbar
      div#radio
        input#radio1(type="radio", name="radio", data-router="draw2d.layout.connection.ManhattanConnectionRouter", checked="checked")
        label(for="radio1") Manhattan
        input#radio2(type="radio", name="radio", data-router="draw2d.layout.connection.ManhattanBridgedConnectionRouter")
        label(for="radio2") Manhattan Bridged
        input#radio3(type="radio", name="radio", data-router="draw2d.layout.connection.InteractiveManhattanConnectionRouter")
        label(for="radio3") Interactive Manhattan
        input#radio4(type="radio", name="radio", data-router="draw2d.layout.connection.CircuitConnectionRouter")
        label(for="radio4") Circuit
    div#canvas(style="width:3000px; height:3000px;")
    div#json
    block addscript
      //- draw2d library dependencies 
      include includes/draw2d_js

      //- draw2d Classes for the GUI editor application
      script(src="/javascripts/draw2d/Application.js")
      script(src="/javascripts/draw2d/Palette.js")
      script(src="/javascripts/draw2d/View.js")
      script(src="/javascripts/draw2d/Toolbar.js")

      script(src="/javascripts/draw2d/figure/example.json")
      //- ToDo: load draw2d buildin shapes of Circuit
      script(src="/javascripts/draw2d/circuit/test.circuit")

      script.
        var showJSON = true;
        $(window).load( function(){
          var app = new tot.Application();
          app.load(jsonDocument);
          //- app.load(testCircuit);
          if (showJSON === true) {
            displayJSON(app.view);
            // add an event listener to the Canvas for change notifications.
            // We just dump the current canvas document into the DIV
            //
            app.view.getCommandStack().addEventListener(
              function(e){
                if(e.isPostChangeEvent()){
                    displayJSON(app.view);
              }
            });
          }
        });
        function displayJSON(canvas){
          var writer = new draw2d.io.json.Writer();
          writer.marshal(canvas, function(json){
              $("#json").html("<pre>"+JSON.stringify(json,null,2)+"<pre>");
          });
        }
